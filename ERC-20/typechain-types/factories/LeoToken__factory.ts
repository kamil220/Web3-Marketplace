/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LeoToken, LeoTokenInterface } from "../LeoToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releasePeriod",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenRate",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "withdrawLeoTokens",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600d81526020017f4c656f636f646520546f6b656e0000000000000000000000000000000000000081525060009080519060200190620000519291906200024e565b506040518060400160405280600381526020017f4c454f0000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f9291906200024e565b506012600260006101000a81548160ff021916908360ff16021790555062093a80600260156101000a81548163ffffffff021916908363ffffffff1602179055506064600260196101000a81548160ff021916908360ff1602179055503480156200010957600080fd5b5033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200015b6200021960201b60201c565b600360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620001ae6200021960201b60201c565b60036000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620005af565b6000600260009054906101000a900460ff16600a62000239919062000359565b620186a062000249919062000496565b905090565b8280546200025c906200050e565b90600052602060002090601f016020900481019282620002805760008555620002cc565b82601f106200029b57805160ff1916838001178555620002cc565b82800160010185558215620002cc579182015b82811115620002cb578251825591602001919060010190620002ae565b5b509050620002db9190620002df565b5090565b5b80821115620002fa576000816000905550600101620002e0565b5090565b6000808291508390505b6001851115620003505780860481111562000328576200032762000544565b5b6001851615620003385780820291505b80810290506200034885620005a2565b945062000308565b94509492505050565b60006200036682620004f7565b9150620003738362000501565b9250620003a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620003aa565b905092915050565b600082620003bc57600190506200048f565b81620003cc57600090506200048f565b8160018114620003e55760028114620003f05762000426565b60019150506200048f565b60ff84111562000405576200040462000544565b5b8360020a9150848211156200041f576200041e62000544565b5b506200048f565b5060208310610133831016604e8410600b8410161715620004605782820a9050838111156200045a576200045962000544565b5b6200048f565b6200046f8484846001620002fe565b9250905081840481111562000489576200048862000544565b5b81810290505b9392505050565b6000620004a382620004f7565b9150620004b083620004f7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620004ec57620004eb62000544565b5b828202905092915050565b6000819050919050565b600060ff82169050919050565b600060028204905060018216806200052757607f821691505b602082108114156200053e576200053d62000573565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60008160011c9050919050565b611eeb80620005bf6000396000f3fe6080604052600436106100e85760003560e01c806370a082311161008a578063a9059cbb11610059578063a9059cbb1461030e578063d0febe4c1461034b578063d46d092514610355578063dd62ed3e14610380576100e8565b806370a082311461023e5780638da5cb5b1461027b57806395d89b41146102a65780639b71569b146102d1576100e8565b806323b872dd116100c657806323b872dd14610180578063313ce567146101bd57806331711884146101e857806363ef162714610213576100e8565b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610155575b600080fd5b3480156100f957600080fd5b506101026103bd565b60405161010f9190611881565b60405180910390f35b34801561012457600080fd5b5061013f600480360381019061013a9190611690565b61044b565b60405161014c9190611866565b60405180910390f35b34801561016157600080fd5b5061016a6105af565b6040516101779190611963565b60405180910390f35b34801561018c57600080fd5b506101a760048036038101906101a29190611641565b6105e0565b6040516101b49190611866565b60405180910390f35b3480156101c957600080fd5b506101d2610b24565b6040516101df9190611999565b60405180910390f35b3480156101f457600080fd5b506101fd610b37565b60405161020a9190611999565b60405180910390f35b34801561021f57600080fd5b50610228610b4a565b604051610235919061197e565b60405180910390f35b34801561024a57600080fd5b50610265600480360381019061026091906115dc565b610b60565b6040516102729190611963565b60405180910390f35b34801561028757600080fd5b50610290610b78565b60405161029d919061184b565b60405180910390f35b3480156102b257600080fd5b506102bb610b9e565b6040516102c89190611881565b60405180910390f35b3480156102dd57600080fd5b506102f860048036038101906102f391906116cc565b610c2c565b6040516103059190611866565b60405180910390f35b34801561031a57600080fd5b5061033560048036038101906103309190611690565b610ec2565b6040516103429190611866565b60405180910390f35b61035361123b565b005b34801561036157600080fd5b5061036a611442565b6040516103779190611963565b60405180910390f35b34801561038c57600080fd5b506103a760048036038101906103a29190611605565b6114da565b6040516103b49190611963565b60405180910390f35b600080546103ca90611cbd565b80601f01602080910402602001604051908101604052809291908181526020018280546103f690611cbd565b80156104435780601f1061041857610100808354040283529160200191610443565b820191906000526020600020905b81548152906001019060200180831161042657829003601f168201915b505050505081565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b5906118a3565b60405180910390fd5b82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161059c9190611963565b60405180910390a3600191505092915050565b6000600260009054906101000a900460ff16600a6105cd9190611a79565b620186a06105db9190611b97565b905090565b600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610653576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064a906118a3565b60405180910390fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb906118a3565b60405180910390fd5b858442600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015610753575080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b156108295780600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107e39190611bf1565b1015610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b90611903565b60405180910390fd5b6108ac565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a290611923565b60405180910390fd5b5b87878780600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561096e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610965906118e3565b60405180910390fd5b88600360008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109bd9190611bf1565b9250508190555088600460008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a509190611bf1565b9250508190555088600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aa691906119d0565b925050819055508973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b604051610b0a9190611963565b60405180910390a360019750505050505050509392505050565b600260009054906101000a900460ff1681565b600260199054906101000a900460ff1681565b600260159054906101000a900463ffffffff1681565b60036020528060005260406000206000915090505481565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610bab90611cbd565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd790611cbd565b8015610c245780601f10610bf957610100808354040283529160200191610c24565b820191906000526020600020905b815481529060010190602001808311610c0757829003601f168201915b505050505081565b60003373ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb5906118c3565b60405180910390fd5b818060036000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5a90611923565b60405180910390fd5b8260036000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd49190611bf1565b9250508190555082600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e2a91906119d0565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610eb09190611963565b60405180910390a36001915050919050565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2c906118a3565b60405180910390fd5b338342600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118015610fc4575080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b1561109a5780600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110549190611bf1565b1015611095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108c90611903565b60405180910390fd5b61111d565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561111c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111390611923565b60405180910390fd5b5b84600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461116c9190611bf1565b9250508190555084600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111c291906119d0565b925050819055508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040516112269190611963565b60405180910390a36001935050505092915050565b600034141561127f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127690611923565b60405180910390fd5b42600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f890611943565b60405180910390fd5b6000600260199054906101000a900460ff1660ff16346113219190611b97565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461137291906119d0565b9250508190555080600360003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113c89190611bf1565b925050819055506113da3382426114ff565b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114379190611963565b60405180910390a350565b600042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156114d257600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506114d7565b600090505b90565b6004602052816000526040600020602052806000526040600020600091509150505481565b600260159054906101000a900463ffffffff1663ffffffff168161152391906119d0565b905080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6000813590506115c181611e87565b92915050565b6000813590506115d681611e9e565b92915050565b6000602082840312156115ee57600080fd5b60006115fc848285016115b2565b91505092915050565b6000806040838503121561161857600080fd5b6000611626858286016115b2565b9250506020611637858286016115b2565b9150509250929050565b60008060006060848603121561165657600080fd5b6000611664868287016115b2565b9350506020611675868287016115b2565b9250506040611686868287016115c7565b9150509250925092565b600080604083850312156116a357600080fd5b60006116b1858286016115b2565b92505060206116c2858286016115c7565b9150509250929050565b6000602082840312156116de57600080fd5b60006116ec848285016115c7565b91505092915050565b6116fe81611c25565b82525050565b61170d81611c37565b82525050565b600061171e826119b4565b61172881856119bf565b9350611738818560208601611c8a565b61174181611d4d565b840191505092915050565b6000611759601b836119bf565b915061176482611d6b565b602082019050919050565b600061177c6012836119bf565b915061178782611d94565b602082019050919050565b600061179f601e836119bf565b91506117aa82611dbd565b602082019050919050565b60006117c26011836119bf565b91506117cd82611de6565b602082019050919050565b60006117e56011836119bf565b91506117f082611e0f565b602082019050919050565b6000611808602f836119bf565b915061181382611e38565b604082019050919050565b61182781611c63565b82525050565b61183681611c6d565b82525050565b61184581611c7d565b82525050565b600060208201905061186060008301846116f5565b92915050565b600060208201905061187b6000830184611704565b92915050565b6000602082019050818103600083015261189b8184611713565b905092915050565b600060208201905081810360008301526118bc8161174c565b9050919050565b600060208201905081810360008301526118dc8161176f565b9050919050565b600060208201905081810360008301526118fc81611792565b9050919050565b6000602082019050818103600083015261191c816117b5565b9050919050565b6000602082019050818103600083015261193c816117d8565b9050919050565b6000602082019050818103600083015261195c816117fb565b9050919050565b6000602082019050611978600083018461181e565b92915050565b6000602082019050611993600083018461182d565b92915050565b60006020820190506119ae600083018461183c565b92915050565b600081519050919050565b600082825260208201905092915050565b60006119db82611c63565b91506119e683611c63565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a1b57611a1a611cef565b5b828201905092915050565b6000808291508390505b6001851115611a7057808604811115611a4c57611a4b611cef565b5b6001851615611a5b5780820291505b8081029050611a6985611d5e565b9450611a30565b94509492505050565b6000611a8482611c63565b9150611a8f83611c7d565b9250611abc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611ac4565b905092915050565b600082611ad45760019050611b90565b81611ae25760009050611b90565b8160018114611af85760028114611b0257611b31565b6001915050611b90565b60ff841115611b1457611b13611cef565b5b8360020a915084821115611b2b57611b2a611cef565b5b50611b90565b5060208310610133831016604e8410600b8410161715611b665782820a905083811115611b6157611b60611cef565b5b611b90565b611b738484846001611a26565b92509050818404811115611b8a57611b89611cef565b5b81810290505b9392505050565b6000611ba282611c63565b9150611bad83611c63565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611be657611be5611cef565b5b828202905092915050565b6000611bfc82611c63565b9150611c0783611c63565b925082821015611c1a57611c19611cef565b5b828203905092915050565b6000611c3082611c43565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60005b83811015611ca8578082015181840152602081019050611c8d565b83811115611cb7576000848401525b50505050565b60006002820490506001821680611cd557607f821691505b60208210811415611ce957611ce8611d1e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f5a65726f2061646472657373206973206e6f7420616c6c6f7765640000000000600082015250565b7f4d696e6572206973206e6f74206f776e65720000000000000000000000000000600082015250565b7f4e6f7420616c6c6f77656420746f207472616e7366657220746f6b656e730000600082015250565b7f546f6b656e732061726520766573746564000000000000000000000000000000600082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f4e6f7420616c6c6f77656420746f2062757920746f6b656e73206d6f7265207460008201527f68616e206f6e63652061207765656b0000000000000000000000000000000000602082015250565b611e9081611c25565b8114611e9b57600080fd5b50565b611ea781611c63565b8114611eb257600080fd5b5056fea2646970667358221220fb754391c7c771d950a30585f7e86c1b5b40adff50fc9d259eb21285055d4ebf64736f6c63430008040033";

type LeoTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeoTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeoToken__factory extends ContractFactory {
  constructor(...args: LeoTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LeoToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LeoToken> {
    return super.deploy(overrides || {}) as Promise<LeoToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LeoToken {
    return super.attach(address) as LeoToken;
  }
  connect(signer: Signer): LeoToken__factory {
    return super.connect(signer) as LeoToken__factory;
  }
  static readonly contractName: "LeoToken";
  public readonly contractName: "LeoToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeoTokenInterface {
    return new utils.Interface(_abi) as LeoTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeoToken {
    return new Contract(address, _abi, signerOrProvider) as LeoToken;
  }
}
